format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - ANSIBLE_HOST_KEY_CHECKING: 'False'
  # define these in the .bitrise.secrets.yml
  - VM_BUILD_BOX_VERSION: $VM_BUILD_BOX_VERSION
  - VM_BUILD_IP: $VM_BUILD_IP

trigger_map:
- pattern: step/1
  workflow: vagrant-setup
- pattern: step/2
  workflow: provision-vm
- pattern: step/3
  workflow: DEPRECATED-create-xcode-version-mapping
- pattern: step/xamarin
  workflow: provision-xamarin-vm

workflows:

  vagrant-setup:
    description: |-
      Runs `ansible` with the `vagrant-setup-playbook`, to have a bare minimum
      `vagrant` ready setup on the target VM.
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            echo " (!!!) When prompted for a password provide the VM's SSH password"
            echo '       should be "vagrant" if you do a default vagrant setup'
            set -x
            ansible-playbook --ask-pass -i "${VM_BUILD_IP}", "./vagrant-setup-playbook.yml"

  provision-vm:
    description: |-
      Runs `ansible` with the `playbook.yml` playbook, to provision the
      Virtual Machine. After this the VM should be completely ready,
      you just have to save it / package it / distribute it.
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x
            echo " * VM_BUILD_BOX_VERSION: $VM_BUILD_BOX_VERSION"
            ansible-playbook -e bitrise_box_version="${VM_BUILD_BOX_VERSION}" --private-key ./vagrant-insecure_private_key -i "${VM_BUILD_IP}", "./playbook.yml"

  DEPRECATED-create-xcode-version-mapping:
    description: |-
      DEPRECATED: will be removed in the near future, as we don't pre-install multiple Xcode versions
      in the same VM anymore (mainly because of incompatibility issues).
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x
            ansible-playbook --private-key ./vagrant-insecure_private_key -i "${VM_BUILD_IP}", "./xcode-version-map-files-playbook.yml"

  provision-xamarin-vm:
    description: |-
      Runs `ansible` with the `xamarin-playbook.yml` playbook, to provision the
      Virtual Machine. After this the VM should be completely ready,
      you just have to save it / package it / distribute it.
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x
            ansible-playbook --private-key ./vagrant-insecure_private_key -i "${VM_BUILD_IP}", "./xamarin-playbook.yml"
